{"ast":null,"code":"import httpApi from '../../http';\nexport default {\n  data() {\n    return {\n      form: {\n        cover: '',\n        categoryid: '',\n        title: '',\n        type: '',\n        starActor: '',\n        showingon: '',\n        score: '',\n        duration: '',\n        description: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '该字段必填',\n          trigger: 'blur'\n        }],\n        cover: [{\n          required: true,\n          message: '该字段必填',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 提交表单\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          httpApi.actorApi.addActor(this.form).then(res => {\n            console.log('新增演员', res);\n            this.$message({\n              message: '恭喜添加成功',\n              type: 'success'\n            });\n            // 重置表单将会重置每个表单项，需要form-item提供prop属性\n            this.$refs['form'].resetFields();\n          });\n        }\n      });\n    },\n    // 上传成功后执行\n    handleAvatarSuccess(res, file) {\n      console.log('上传成功', res);\n      // 将返回的图片访问路径 存入 this.form中\n      this.form.cover = res.data;\n    },\n    // 头像上传前执行：格式、大小的验证，该方法需要返回true、false\n    // true:  验证通过可以上传\n    // false: 验证不通过，阻止上传\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!(isJPG || isPNG)) {\n        this.$message.error('上传头像图片只能是 JPG/PNG 格式且大小不能超过 2MB!');\n      } else if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return (isJPG || isPNG) && isLt2M;\n    }\n  }\n};","map":{"version":3,"names":["httpApi","data","form","cover","categoryid","title","type","starActor","showingon","score","duration","description","rules","required","message","trigger","methods","submit","$refs","validate","valid","actorApi","addActor","then","res","console","log","$message","resetFields","handleAvatarSuccess","file","beforeAvatarUpload","isJPG","isPNG","isLt2M","size","error"],"sources":["src/views/movie/MovieAdd.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n\t\t\t<el-breadcrumb-item :to=\"{ path: '/home/index' }\">首页</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>电影管理</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>新增电影</el-breadcrumb-item>\r\n\t\t</el-breadcrumb>\r\n\t\t<el-divider></el-divider>\r\n\t\t<!-- 表单 -->\r\n\t\t<el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" style=\"width: 600px\">\r\n\t\t\t<el-form-item label=\"封面图片\" prop=\"cover\">\r\n\t\t\t\t<el-upload\r\n\t\t\t\t\tclass=\"avatar-uploader\"\r\n\t\t\t\t\t:action=\"`${UPLOADURL}/upload`\"\r\n\t\t\t\t\t:show-file-list=\"false\"\r\n\t\t\t\t\t:on-success=\"handleAvatarSuccess\"\r\n\t\t\t\t\t:before-upload=\"beforeAvatarUpload\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<img style=\"object-fit: cover\" v-if=\"form.cover\" :src=\"form.cover\" class=\"avatar\" />\r\n\t\t\t\t\t<i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n\t\t\t\t</el-upload>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影类别\" prop=\"categoryid\">\r\n\t\t\t\t<el-radio-group v-model=\"form.categoryid\">\r\n\t\t\t\t\t<el-radio label=\"热映\"></el-radio>\r\n\t\t\t\t\t<el-radio label=\"待映\"></el-radio>\r\n\t\t\t\t\t<el-radio label=\"经典\"></el-radio>\r\n\t\t\t\t</el-radio-group>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影名称\" prop=\"title\">\r\n\t\t\t\t<el-input v-model=\"form.title\" placeholder=\"请输入要添加的电影名称\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影类型\" prop=\"type\">\r\n\t\t\t\t<el-select v-model=\"form.type\" placeholder=\"请选择活动区域\">\r\n\t\t\t\t\t<el-option label=\"区域一\" value=\"shanghai\"></el-option>\r\n\t\t\t\t\t<el-option label=\"区域二\" value=\"beijing\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影主演\" prop=\"starActor\">\r\n\t\t\t\t<el-input style=\"width: 220px\" v-model=\"form.starActor\" placeholder=\"请输入主演名称\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"上映时间\" prop=\"showingon\">\r\n\t\t\t\t<el-date-picker\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\tplaceholder=\"选择日期\"\r\n\t\t\t\t\tv-model=\"form.showingon\"\r\n\t\t\t\t\tstyle=\"width: 100%\"\r\n\t\t\t\t></el-date-picker>\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<el-form-item label=\"电影评分\" prop=\"score\">\r\n\t\t\t\t<el-input v-model=\"form.score\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影时长\" prop=\"duration\">\r\n\t\t\t\t<el-input v-model=\"form.duration\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"电影简介\" prop=\"description\">\r\n\t\t\t\t<el-input v-model=\"form.description\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item>\r\n\t\t\t\t<el-button type=\"primary\" @click=\"submit\">立即创建</el-button>\r\n\t\t\t\t<el-button>取消</el-button>\r\n\t\t\t</el-form-item>\r\n\t\t</el-form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport httpApi from '../../http';\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tform: {\r\n\t\t\t\t\tcover: '',\r\n\t\t\t\t\tcategoryid: '',\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tstarActor: '',\r\n\t\t\t\t\tshowingon: '',\r\n\t\t\t\t\tscore: '',\r\n\t\t\t\t\tduration: '',\r\n\t\t\t\t\tdescription: '',\r\n\t\t\t\t},\r\n\t\t\t\trules: {\r\n\t\t\t\t\ttitle: [{ required: true, message: '该字段必填', trigger: 'blur' }],\r\n\t\t\t\t\tcover: [{ required: true, message: '该字段必填', trigger: 'blur' }],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交表单\r\n\t\t\tsubmit() {\r\n\t\t\t\tthis.$refs['form'].validate((valid) => {\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\thttpApi.actorApi.addActor(this.form).then((res) => {\r\n\t\t\t\t\t\t\tconsole.log('新增演员', res);\r\n\t\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\t\tmessage: '恭喜添加成功',\r\n\t\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// 重置表单将会重置每个表单项，需要form-item提供prop属性\r\n\t\t\t\t\t\t\tthis.$refs['form'].resetFields();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 上传成功后执行\r\n\t\t\thandleAvatarSuccess(res, file) {\r\n\t\t\t\tconsole.log('上传成功', res);\r\n\t\t\t\t// 将返回的图片访问路径 存入 this.form中\r\n\t\t\t\tthis.form.cover = res.data;\r\n\t\t\t},\r\n\r\n\t\t\t// 头像上传前执行：格式、大小的验证，该方法需要返回true、false\r\n\t\t\t// true:  验证通过可以上传\r\n\t\t\t// false: 验证不通过，阻止上传\r\n\t\t\tbeforeAvatarUpload(file) {\r\n\t\t\t\tconst isJPG = file.type === 'image/jpeg';\r\n\t\t\t\tconst isPNG = file.type === 'image/png';\r\n\t\t\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n\t\t\t\tif (!(isJPG || isPNG)) {\r\n\t\t\t\t\tthis.$message.error('上传头像图片只能是 JPG/PNG 格式且大小不能超过 2MB!');\r\n\t\t\t\t} else if (!isLt2M) {\r\n\t\t\t\t\tthis.$message.error('上传头像图片大小不能超过 2MB!');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (isJPG || isPNG) && isLt2M;\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n\r\n<style>\r\n\t.avatar-uploader .el-upload {\r\n\t\tborder: 1px dashed #d9d9d9;\r\n\t\tborder-radius: 6px;\r\n\t\tcursor: pointer;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.avatar-uploader .el-upload:hover {\r\n\t\tborder-color: #409eff;\r\n\t}\r\n\t.avatar-uploader-icon {\r\n\t\tfont-size: 28px;\r\n\t\tcolor: #8c939d;\r\n\t\twidth: 120px;\r\n\t\theight: 120px;\r\n\t\tline-height: 120px;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.avatar {\r\n\t\twidth: 120px;\r\n\t\theight: 120px;\r\n\t\tdisplay: block;\r\n\t}\r\n</style>\r\n"],"mappings":"AAoEA,OAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAC,UAAA;QACAC,KAAA;QACAC,IAAA;QACAC,SAAA;QACAC,SAAA;QACAC,KAAA;QACAC,QAAA;QACAC,WAAA;MACA;MACAC,KAAA;QACAP,KAAA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAZ,KAAA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA,KAAAC,KAAA,SAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACApB,OAAA,CAAAqB,QAAA,CAAAC,QAAA,MAAApB,IAAA,EAAAqB,IAAA,CAAAC,GAAA;YACAC,OAAA,CAAAC,GAAA,SAAAF,GAAA;YACA,KAAAG,QAAA;cACAb,OAAA;cACAR,IAAA;YACA;YACA;YACA,KAAAY,KAAA,SAAAU,WAAA;UACA;QACA;MACA;IACA;IAEA;IACAC,oBAAAL,GAAA,EAAAM,IAAA;MACAL,OAAA,CAAAC,GAAA,SAAAF,GAAA;MACA;MACA,KAAAtB,IAAA,CAAAC,KAAA,GAAAqB,GAAA,CAAAvB,IAAA;IACA;IAEA;IACA;IACA;IACA8B,mBAAAD,IAAA;MACA,MAAAE,KAAA,GAAAF,IAAA,CAAAxB,IAAA;MACA,MAAA2B,KAAA,GAAAH,IAAA,CAAAxB,IAAA;MACA,MAAA4B,MAAA,GAAAJ,IAAA,CAAAK,IAAA;MAEA,MAAAH,KAAA,IAAAC,KAAA;QACA,KAAAN,QAAA,CAAAS,KAAA;MACA,YAAAF,MAAA;QACA,KAAAP,QAAA,CAAAS,KAAA;MACA;MAEA,QAAAJ,KAAA,IAAAC,KAAA,KAAAC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}