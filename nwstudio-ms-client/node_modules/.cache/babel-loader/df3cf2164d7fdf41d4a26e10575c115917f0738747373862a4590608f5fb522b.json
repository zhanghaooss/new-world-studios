{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport httpApi from '../../http';\nexport default {\n  data() {\n    return {\n      name: this.$route.query.name ? this.$route.query.name : '',\n      MoviesData: {\n        page: parseInt(this.$route.params.page) || 1,\n        pagesize: 10,\n        result: [],\n        total: 0\n      }\n    };\n  },\n  methods: {\n    //加载首页电影列表\n    getMovieList() {\n      if (arguments.length == 0) {\n        let params = {\n          page: this.MoviesData.page,\n          pagesize: this.MoviesData.pagesize\n        };\n        httpApi.movieApi.queryAllMovie(params).then(res => {\n          this.MoviesData = res.data.data;\n        });\n      }\n      if (arguments[0] == 1) {\n        let params = {\n          name: this.name.trim(),\n          page: this.MoviesData.page,\n          pagesize: this.MoviesData.pagesize\n        };\n        httpApi.movieApi.queryMovieByName(params).then(res => {\n          this.MoviesData = res.data.data;\n          this.$router.push({\n            path: `/home/movie-list/${this.MoviesData.page}`,\n            query: {\n              name: this.name\n            }\n          });\n        });\n      }\n    },\n    /**\r\n     * 查找电影\r\n     * 业务：点击搜索携带输入框的关键字 返回模糊查询的结果列表\r\n     * 刷新停留 刷新之后输入框的内容还在，且结果列表依旧是模糊查询的结果列表\r\n     * 点击分页时候 切换的是模糊查询的结果列表\r\n     */\n    searchMovie() {\n      if (this.name.trim()) {\n        this.MoviesData.page = 1;\n        this.getMovieList(1);\n      } else {\n        this.$router.push('/home/movie-list/1');\n        this.getMovieList();\n      }\n    },\n    /**\r\n     * 分页跳转\r\n     */\n    currentPageChange(page) {\n      this.MoviesData.page = page;\n      //刷新保留当前页，需要往地址中加当前页的参数\n      if (this.$route.query.name) {\n        this.$router.push({\n          path: `/home/movie-list/${page}`,\n          query: {\n            name: this.name\n          }\n        });\n        this.getMovieList(1);\n      } else {\n        this.$router.push('/home/movie-list/' + page);\n        this.getMovieList();\n      }\n    },\n    /**\r\n     * 删除电影\r\n     */\n    deleteMovie(id) {\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        httpApi.movieApi.DeleteMovieById({\n          id\n        }).then(res => {\n          console.log(res);\n          if (res.data.code == 200) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.$route.params.name ? this.getMovieList(1) : this.getMovieList();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  },\n  mounted() {\n    this.$route.params.name ? this.getMovieList(1) : this.getMovieList();\n  }\n};","map":{"version":3,"names":["httpApi","data","name","$route","query","MoviesData","page","parseInt","params","pagesize","result","total","methods","getMovieList","arguments","length","movieApi","queryAllMovie","then","res","trim","queryMovieByName","$router","push","path","searchMovie","currentPageChange","deleteMovie","id","$confirm","confirmButtonText","cancelButtonText","type","DeleteMovieById","console","log","code","$message","message","catch","mounted"],"sources":["src/views/movie/MovieList.vue"],"sourcesContent":["<template>\r\n\t<div class=\"actor-list\">\r\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n\t\t\t<el-breadcrumb-item :to=\"{ path: '/home/index' }\">首页</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>电影管理</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>电影列表</el-breadcrumb-item>\r\n\t\t</el-breadcrumb>\r\n\t\t<el-divider></el-divider>\r\n\t\t<el-form :inline=\"true\" class=\"demo-form-inline\">\r\n\t\t\t<el-form-item label=\"名称\">\r\n\t\t\t\t<el-input\r\n\t\t\t\t\tv-model=\"name\"\r\n\t\t\t\t\tplaceholder=\"请输入要查找的电影名称\"\r\n\t\t\t\t\t@keydown.enter.native=\"searchMovie\"\r\n\t\t\t\t>\r\n\t\t\t\t</el-input>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item>\r\n\t\t\t\t<el-button type=\"primary\" @click=\"searchMovie\">查询</el-button>\r\n\t\t\t</el-form-item>\r\n\t\t</el-form>\r\n\t\t<el-divider content-position=\"left\">电影列表</el-divider>\r\n\t\t<el-table :data=\"this.MoviesData.result\" style=\"width: 100%\">\r\n\t\t\t<el-table-column label=\"封面\" align=\"center\" width=\"110px\">\r\n\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t<img width=\"60px\" :src=\"scope.row.cover\" alt=\"\" />\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column label=\"标题\" prop=\"title\" align=\"center\"> </el-table-column>\r\n\t\t\t<el-table-column label=\"主演\" prop=\"star_actor\" align=\"center\"> </el-table-column>\r\n\t\t\t<el-table-column label=\"上映时间\" prop=\"showingon\" align=\"center\" width=\"120px\">\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column label=\"时长\" align=\"center\" width=\"120px\">\r\n\t\t\t\t<template slot-scope=\"scope\"> {{ scope.row.duration }}分钟 </template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column label=\"所属类别\" align=\"center\" prop=\"type\"> </el-table-column>\r\n\t\t\t<el-table-column label=\"操作\" align=\"center\" width=\"200\">\r\n\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t<el-button size=\"small\" type=\"info\" icon=\"el-icon-user-solid\" circle></el-button>\r\n\t\t\t\t\t<el-button size=\"small\" type=\"success\" icon=\"el-icon-picture\" circle></el-button>\r\n\t\t\t\t\t<el-button size=\"small\" type=\"warning\" icon=\"el-icon-edit\" circle></el-button>\r\n\t\t\t\t\t<el-button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\ttype=\"danger\"\r\n\t\t\t\t\t\ticon=\"el-icon-delete\"\r\n\t\t\t\t\t\tcircle\r\n\t\t\t\t\t\t@click=\"deleteMovie(scope.row.id)\"\r\n\t\t\t\t\t></el-button>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t</el-table>\r\n\t\t<el-pagination\r\n\t\t\tbackground\r\n\t\t\t:current-page=\"MoviesData.page\"\r\n\t\t\tlayout=\"->,prev, pager, next , jumper ,  total\"\r\n\t\t\t:page-size=\"MoviesData.pagesize\"\r\n\t\t\t:total=\"MoviesData.total\"\r\n\t\t\t@current-change=\"currentPageChange\"\r\n\t\t>\r\n\t\t</el-pagination>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport httpApi from '../../http';\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tname: this.$route.query.name ? this.$route.query.name : '',\r\n\t\t\t\tMoviesData: {\r\n\t\t\t\t\tpage: parseInt(this.$route.params.page) || 1,\r\n\t\t\t\t\tpagesize: 10,\r\n\t\t\t\t\tresult: [],\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\t//加载首页电影列表\r\n\t\t\tgetMovieList() {\r\n\t\t\t\tif (arguments.length == 0) {\r\n\t\t\t\t\tlet params = { page: this.MoviesData.page, pagesize: this.MoviesData.pagesize };\r\n\t\t\t\t\thttpApi.movieApi.queryAllMovie(params).then((res) => {\r\n\t\t\t\t\t\tthis.MoviesData = res.data.data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (arguments[0] == 1) {\r\n\t\t\t\t\tlet params = {\r\n\t\t\t\t\t\tname: this.name.trim(),\r\n\t\t\t\t\t\tpage: this.MoviesData.page,\r\n\t\t\t\t\t\tpagesize: this.MoviesData.pagesize,\r\n\t\t\t\t\t};\r\n\t\t\t\t\thttpApi.movieApi.queryMovieByName(params).then((res) => {\r\n\t\t\t\t\t\tthis.MoviesData = res.data.data;\r\n\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t\t\tpath: `/home/movie-list/${this.MoviesData.page}`,\r\n\t\t\t\t\t\t\tquery: { name: this.name },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 查找电影\r\n\t\t\t * 业务：点击搜索携带输入框的关键字 返回模糊查询的结果列表\r\n\t\t\t * 刷新停留 刷新之后输入框的内容还在，且结果列表依旧是模糊查询的结果列表\r\n\t\t\t * 点击分页时候 切换的是模糊查询的结果列表\r\n\t\t\t */\r\n\t\t\tsearchMovie() {\r\n\t\t\t\tif (this.name.trim()) {\r\n\t\t\t\t\tthis.MoviesData.page = 1;\r\n\t\t\t\t\tthis.getMovieList(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$router.push('/home/movie-list/1');\r\n\t\t\t\t\tthis.getMovieList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 分页跳转\r\n\t\t\t */\r\n\t\t\tcurrentPageChange(page) {\r\n\t\t\t\tthis.MoviesData.page = page;\r\n\t\t\t\t//刷新保留当前页，需要往地址中加当前页的参数\r\n\t\t\t\tif (this.$route.query.name) {\r\n\t\t\t\t\tthis.$router.push({ path: `/home/movie-list/${page}`, query: { name: this.name } });\r\n\t\t\t\t\tthis.getMovieList(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$router.push('/home/movie-list/' + page);\r\n\t\t\t\t\tthis.getMovieList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 删除电影\r\n\t\t\t */\r\n\t\t\tdeleteMovie(id) {\r\n\t\t\t\tthis.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n\t\t\t\t\tconfirmButtonText: '确定',\r\n\t\t\t\t\tcancelButtonText: '取消',\r\n\t\t\t\t\ttype: 'warning',\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\thttpApi.movieApi.DeleteMovieById({ id }).then((res) => {\r\n\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\t\t\tmessage: '删除成功!',\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.$route.params.name ? this.getMovieList(1) : this.getMovieList();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\ttype: 'info',\r\n\t\t\t\t\t\t\tmessage: '已取消删除',\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.$route.params.name ? this.getMovieList(1) : this.getMovieList();\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"mappings":";AAgEA,OAAAA,OAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA;MACAG,UAAA;QACAC,IAAA,EAAAC,QAAA,MAAAJ,MAAA,CAAAK,MAAA,CAAAF,IAAA;QACAG,QAAA;QACAC,MAAA;QACAC,KAAA;MACA;IACA;EACA;EAEAC,OAAA;IACA;IACAC,aAAA;MACA,IAAAC,SAAA,CAAAC,MAAA;QACA,IAAAP,MAAA;UAAAF,IAAA,OAAAD,UAAA,CAAAC,IAAA;UAAAG,QAAA,OAAAJ,UAAA,CAAAI;QAAA;QACAT,OAAA,CAAAgB,QAAA,CAAAC,aAAA,CAAAT,MAAA,EAAAU,IAAA,CAAAC,GAAA;UACA,KAAAd,UAAA,GAAAc,GAAA,CAAAlB,IAAA,CAAAA,IAAA;QACA;MACA;MACA,IAAAa,SAAA;QACA,IAAAN,MAAA;UACAN,IAAA,OAAAA,IAAA,CAAAkB,IAAA;UACAd,IAAA,OAAAD,UAAA,CAAAC,IAAA;UACAG,QAAA,OAAAJ,UAAA,CAAAI;QACA;QACAT,OAAA,CAAAgB,QAAA,CAAAK,gBAAA,CAAAb,MAAA,EAAAU,IAAA,CAAAC,GAAA;UACA,KAAAd,UAAA,GAAAc,GAAA,CAAAlB,IAAA,CAAAA,IAAA;UACA,KAAAqB,OAAA,CAAAC,IAAA;YACAC,IAAA,2BAAAnB,UAAA,CAAAC,IAAA;YACAF,KAAA;cAAAF,IAAA,OAAAA;YAAA;UACA;QACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;IACAuB,YAAA;MACA,SAAAvB,IAAA,CAAAkB,IAAA;QACA,KAAAf,UAAA,CAAAC,IAAA;QACA,KAAAO,YAAA;MACA;QACA,KAAAS,OAAA,CAAAC,IAAA;QACA,KAAAV,YAAA;MACA;IACA;IACA;AACA;AACA;IACAa,kBAAApB,IAAA;MACA,KAAAD,UAAA,CAAAC,IAAA,GAAAA,IAAA;MACA;MACA,SAAAH,MAAA,CAAAC,KAAA,CAAAF,IAAA;QACA,KAAAoB,OAAA,CAAAC,IAAA;UAAAC,IAAA,sBAAAlB,IAAA;UAAAF,KAAA;YAAAF,IAAA,OAAAA;UAAA;QAAA;QACA,KAAAW,YAAA;MACA;QACA,KAAAS,OAAA,CAAAC,IAAA,uBAAAjB,IAAA;QACA,KAAAO,YAAA;MACA;IACA;IACA;AACA;AACA;IACAc,YAAAC,EAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GACAd,IAAA;QACAlB,OAAA,CAAAgB,QAAA,CAAAiB,eAAA;UAAAL;QAAA,GAAAV,IAAA,CAAAC,GAAA;UACAe,OAAA,CAAAC,GAAA,CAAAhB,GAAA;UACA,IAAAA,GAAA,CAAAlB,IAAA,CAAAmC,IAAA;YACA,KAAAC,QAAA;cACAL,IAAA;cACAM,OAAA;YACA;YACA,KAAAnC,MAAA,CAAAK,MAAA,CAAAN,IAAA,QAAAW,YAAA,WAAAA,YAAA;UACA;QACA;MACA,GACA0B,KAAA;QACA,KAAAF,QAAA;UACAL,IAAA;UACAM,OAAA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAArC,MAAA,CAAAK,MAAA,CAAAN,IAAA,QAAAW,YAAA,WAAAA,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}