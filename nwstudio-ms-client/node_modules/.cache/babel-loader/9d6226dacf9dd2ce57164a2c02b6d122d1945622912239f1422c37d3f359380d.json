{"ast":null,"code":"import httpApi from '../../http';\nexport default {\n  data() {\n    return {\n      form: {\n        actorName: '',\n        // 绑定演员名字\n        actorAvatar: '' // 绑定演员头像\n      },\n\n      rules: {\n        actorName: [{\n          required: true,\n          message: '该字段必填',\n          trigger: 'blur'\n        }],\n        actorAvatar: [{\n          required: true,\n          message: '该字段必填',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 提交表单\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          httpApi.actorApi.addActor(this.form).then(res => {\n            console.log('新增演员', res);\n            this.$message({\n              message: '恭喜添加成功',\n              type: 'success'\n            });\n            // 重置表单将会重置每个表单项，需要form-item提供prop属性\n            this.$refs['form'].resetFields();\n          });\n        }\n      });\n    },\n    // 上传成功后执行\n    handleAvatarSuccess(res, file) {\n      console.log('上传成功', res);\n      // 将返回的图片访问路径 存入 this.form中\n      this.form.actorAvatar = res.data;\n    },\n    // 头像上传前执行：格式、大小的验证，该方法需要返回true、false\n    // true:  验证通过可以上传\n    // false: 验证不通过，阻止上传\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!(isJPG || isPNG)) {\n        this.$message.error('上传头像图片只能是 JPG/PNG 格式且大小不能超过 2MB!');\n      } else if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return (isJPG || isPNG) && isLt2M;\n    }\n  }\n};","map":{"version":3,"names":["httpApi","data","form","actorName","actorAvatar","rules","required","message","trigger","methods","submit","$refs","validate","valid","actorApi","addActor","then","res","console","log","$message","type","resetFields","handleAvatarSuccess","file","beforeAvatarUpload","isJPG","isPNG","isLt2M","size","error"],"sources":["src/views/actor/ActorAdd.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<!-- 表单 -->\r\n\t\t<el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" style=\"width: 600px\">\r\n\t\t\t<el-form-item label=\"演员姓名\" prop=\"actorName\">\r\n\t\t\t\t<el-input v-model=\"form.actorName\" placeholder=\"请输入姓名\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"演员头像\" prop=\"actorAvatar\">\r\n\t\t\t\t<el-upload\r\n\t\t\t\t\tclass=\"avatar-uploader\"\r\n\t\t\t\t\t:action=\"`${UPLOADURL}/upload`\"\r\n\t\t\t\t\t:show-file-list=\"false\"\r\n\t\t\t\t\t:on-success=\"handleAvatarSuccess\"\r\n\t\t\t\t\t:before-upload=\"beforeAvatarUpload\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle=\"object-fit: cover\"\r\n\t\t\t\t\t\tv-if=\"form.actorAvatar\"\r\n\t\t\t\t\t\t:src=\"form.actorAvatar\"\r\n\t\t\t\t\t\tclass=\"avatar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n\t\t\t\t</el-upload>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item>\r\n\t\t\t\t<el-button type=\"primary\" @click=\"submit\">立即新增</el-button>\r\n\t\t\t\t<el-button>重置</el-button>\r\n\t\t\t</el-form-item>\r\n\t\t</el-form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport httpApi from '../../http';\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tform: {\r\n\t\t\t\t\tactorName: '', // 绑定演员名字\r\n\t\t\t\t\tactorAvatar: '', // 绑定演员头像\r\n\t\t\t\t},\r\n\t\t\t\trules: {\r\n\t\t\t\t\tactorName: [{ required: true, message: '该字段必填', trigger: 'blur' }],\r\n\t\t\t\t\tactorAvatar: [{ required: true, message: '该字段必填', trigger: 'blur' }],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 提交表单\r\n\t\t\tsubmit() {\r\n\t\t\t\tthis.$refs['form'].validate((valid) => {\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\thttpApi.actorApi.addActor(this.form).then((res) => {\r\n\t\t\t\t\t\t\tconsole.log('新增演员', res);\r\n\t\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\t\tmessage: '恭喜添加成功',\r\n\t\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// 重置表单将会重置每个表单项，需要form-item提供prop属性\r\n\t\t\t\t\t\t\tthis.$refs['form'].resetFields();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 上传成功后执行\r\n\t\t\thandleAvatarSuccess(res, file) {\r\n\t\t\t\tconsole.log('上传成功', res);\r\n\t\t\t\t// 将返回的图片访问路径 存入 this.form中\r\n\t\t\t\tthis.form.actorAvatar = res.data;\r\n\t\t\t},\r\n\r\n\t\t\t// 头像上传前执行：格式、大小的验证，该方法需要返回true、false\r\n\t\t\t// true:  验证通过可以上传\r\n\t\t\t// false: 验证不通过，阻止上传\r\n\t\t\tbeforeAvatarUpload(file) {\r\n\t\t\t\tconst isJPG = file.type === 'image/jpeg';\r\n\t\t\t\tconst isPNG = file.type === 'image/png';\r\n\t\t\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n\t\t\t\tif (!(isJPG || isPNG)) {\r\n\t\t\t\t\tthis.$message.error('上传头像图片只能是 JPG/PNG 格式且大小不能超过 2MB!');\r\n\t\t\t\t} else if (!isLt2M) {\r\n\t\t\t\t\tthis.$message.error('上传头像图片大小不能超过 2MB!');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (isJPG || isPNG) && isLt2M;\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n\r\n<style>\r\n\t.avatar-uploader .el-upload {\r\n\t\tborder: 1px dashed #d9d9d9;\r\n\t\tborder-radius: 6px;\r\n\t\tcursor: pointer;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.avatar-uploader .el-upload:hover {\r\n\t\tborder-color: #409eff;\r\n\t}\r\n\t.avatar-uploader-icon {\r\n\t\tfont-size: 28px;\r\n\t\tcolor: #8c939d;\r\n\t\twidth: 120px;\r\n\t\theight: 120px;\r\n\t\tline-height: 120px;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.avatar {\r\n\t\twidth: 120px;\r\n\t\theight: 120px;\r\n\t\tdisplay: block;\r\n\t}\r\n</style>\r\n"],"mappings":"AAiCA,OAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,SAAA;QAAA;QACAC,WAAA;MACA;;MACAC,KAAA;QACAF,SAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,WAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA,KAAAC,KAAA,SAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAb,OAAA,CAAAc,QAAA,CAAAC,QAAA,MAAAb,IAAA,EAAAc,IAAA,CAAAC,GAAA;YACAC,OAAA,CAAAC,GAAA,SAAAF,GAAA;YACA,KAAAG,QAAA;cACAb,OAAA;cACAc,IAAA;YACA;YACA;YACA,KAAAV,KAAA,SAAAW,WAAA;UACA;QACA;MACA;IACA;IAEA;IACAC,oBAAAN,GAAA,EAAAO,IAAA;MACAN,OAAA,CAAAC,GAAA,SAAAF,GAAA;MACA;MACA,KAAAf,IAAA,CAAAE,WAAA,GAAAa,GAAA,CAAAhB,IAAA;IACA;IAEA;IACA;IACA;IACAwB,mBAAAD,IAAA;MACA,MAAAE,KAAA,GAAAF,IAAA,CAAAH,IAAA;MACA,MAAAM,KAAA,GAAAH,IAAA,CAAAH,IAAA;MACA,MAAAO,MAAA,GAAAJ,IAAA,CAAAK,IAAA;MAEA,MAAAH,KAAA,IAAAC,KAAA;QACA,KAAAP,QAAA,CAAAU,KAAA;MACA,YAAAF,MAAA;QACA,KAAAR,QAAA,CAAAU,KAAA;MACA;MAEA,QAAAJ,KAAA,IAAAC,KAAA,KAAAC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}