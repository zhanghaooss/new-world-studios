{"ast":null,"code":"import myaxios from '../../http/MyAxios';\nimport Person from '../../components/Person.vue';\nimport httpApi from '@/http';\nexport default {\n  data() {\n    return {\n      directorLists: [],\n      inputTip: [],\n      resList: [],\n      state2: ''\n    };\n  },\n  components: {\n    Person\n  },\n  methods: {\n    //默认首页列表\n    DirectorList() {\n      httpApi.directorApi.queryAllDirector().then(res => {\n        let result = res.data.data;\n        this.directorLists = result.map(director => ({\n          ...director,\n          value: director.director_name\n        }));\n        this.resList = this.directorLists;\n        this.inputTip = this.directorLists;\n      });\n    },\n    //获取更新后的列表\n    getListByName(name) {\n      httpApi.directorApi.queryDirectorByName({\n        name: name\n      }).then(res => {\n        this.resList = res.data.data;\n      });\n    },\n    handleEnter() {\n      if (this.state2) {\n        this.getListByName(this.state2.trim());\n      } else {\n        this.resList = this.directorLists;\n      }\n    },\n    //点击按钮查询\n    searchDi() {\n      if (this.state2) {\n        this.getListByName(this.state2.trim());\n      } else {\n        this.DirectorList();\n      }\n    },\n    // 显示搜索建议\n    querySearch(queryString, cb) {\n      var inputTip = this.inputTip;\n      var results = queryString ? inputTip.filter(this.createFilter(queryString)) : inputTip;\n      // 调用 callback 返回建议列表的数据\n      console.log(results);\n      cb(results);\n    },\n    createFilter(queryString) {\n      return inputTip => {\n        return inputTip.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    //点击搜索的建议\n    handleSelect(item) {\n      this.getListByName(item.director_name);\n    },\n    //删除\n    DeleteDirector(event, id) {\n      httpApi.directorApi.DeleteDirectorById({\n        id\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.searchDi();\n        }\n      });\n    }\n  },\n  mounted() {\n    //初始化列表\n    this.DirectorList();\n  }\n};","map":{"version":3,"names":["myaxios","Person","httpApi","data","directorLists","inputTip","resList","state2","components","methods","DirectorList","directorApi","queryAllDirector","then","res","result","map","director","value","director_name","getListByName","name","queryDirectorByName","handleEnter","trim","searchDi","querySearch","queryString","cb","results","filter","createFilter","console","log","toLowerCase","indexOf","handleSelect","item","DeleteDirector","event","id","DeleteDirectorById","code","mounted"],"sources":["src/views/director/DirectorList.vue"],"sourcesContent":["<template>\r\n\t<div class=\"director-list\">\r\n\t\t<el-divider></el-divider>\r\n\t\t<template>\r\n\t\t\t姓名\r\n\t\t\t<el-autocomplete\r\n\t\t\t\tclass=\"inline-input\"\r\n\t\t\t\tv-model=\"state2\"\r\n\t\t\t\t:fetch-suggestions=\"querySearch\"\r\n\t\t\t\tplaceholder=\"请输入导演名字\"\r\n\t\t\t\t:trigger-on-focus=\"false\"\r\n\t\t\t\t@select=\"handleSelect\"\r\n\t\t\t\t@keydown.enter.native=\"handleEnter\"\r\n\t\t\t></el-autocomplete>\r\n\t\t\t<el-button\r\n\t\t\t\tstyle=\"margin-left: 10px\"\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\tslot=\"append\"\r\n\t\t\t\ticon=\"el-icon-search\"\r\n\t\t\t\t@click=\"searchDi\"\r\n\t\t\t></el-button>\r\n\t\t</template>\r\n\t\t<el-divider content-position=\"left\">导演列表</el-divider>\r\n\t\t<!-- <ul class=\"acList\">\r\n\t\t\t<li class=\"director\" v-for=\"director in resList\" :key=\"director.id\">\r\n\t\t\t\t<img :src=\"director.director_avatar\" alt=\"\" />\r\n\t\t\t\t<p>{{ director.director_name }}</p>\r\n\t\t\t</li>\r\n\t\t</ul> -->\r\n\t\t<Person\r\n\t\t\tv-for=\"director in resList\"\r\n\t\t\t:name=\"director.director_name\"\r\n\t\t\t:avatar=\"director.director_avatar\"\r\n\t\t\t:key=\"director.id\"\r\n\t\t\t@delete=\"DeleteDirector($event, director.id)\"\r\n\t\t></Person>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport myaxios from '../../http/MyAxios';\r\n\timport Person from '../../components/Person.vue';\r\n\timport httpApi from '@/http';\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tdirectorLists: [],\r\n\t\t\t\tinputTip: [],\r\n\t\t\t\tresList: [],\r\n\t\t\t\tstate2: '',\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tPerson,\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t//默认首页列表\r\n\t\t\tDirectorList() {\r\n\t\t\t\thttpApi.directorApi.queryAllDirector().then((res) => {\r\n\t\t\t\t\tlet result = res.data.data;\r\n\t\t\t\t\tthis.directorLists = result.map((director) => ({\r\n\t\t\t\t\t\t...director,\r\n\t\t\t\t\t\tvalue: director.director_name,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tthis.resList = this.directorLists;\r\n\t\t\t\t\tthis.inputTip = this.directorLists;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t//获取更新后的列表\r\n\t\t\tgetListByName(name) {\r\n\t\t\t\thttpApi.directorApi.queryDirectorByName({ name: name }).then((res) => {\r\n\t\t\t\t\tthis.resList = res.data.data;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thandleEnter() {\r\n\t\t\t\tif (this.state2) {\r\n\t\t\t\t\tthis.getListByName(this.state2.trim());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.resList = this.directorLists;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//点击按钮查询\r\n\t\t\tsearchDi() {\r\n\t\t\t\tif (this.state2) {\r\n\t\t\t\t\tthis.getListByName(this.state2.trim());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.DirectorList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 显示搜索建议\r\n\t\t\tquerySearch(queryString, cb) {\r\n\t\t\t\tvar inputTip = this.inputTip;\r\n\t\t\t\tvar results = queryString ? inputTip.filter(this.createFilter(queryString)) : inputTip;\r\n\t\t\t\t// 调用 callback 返回建议列表的数据\r\n\t\t\t\tconsole.log(results);\r\n\t\t\t\tcb(results);\r\n\t\t\t},\r\n\t\t\tcreateFilter(queryString) {\r\n\t\t\t\treturn (inputTip) => {\r\n\t\t\t\t\treturn inputTip.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t//点击搜索的建议\r\n\t\t\thandleSelect(item) {\r\n\t\t\t\tthis.getListByName(item.director_name);\r\n\t\t\t},\r\n\t\t\t//删除\r\n\t\t\tDeleteDirector(event, id) {\r\n\t\t\t\thttpApi.directorApi.DeleteDirectorById({ id }).then((res) => {\r\n\t\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\t\tthis.searchDi();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t//初始化列表\r\n\t\t\tthis.DirectorList();\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.acList {\r\n\t\tpadding-top: 20px;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\t.director {\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 100px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\timg {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tborder-radius: 5px;\r\n\t\t\t}\r\n\t\t\tp {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>\r\n"],"mappings":"AAwCA,OAAAA,OAAA;AACA,OAAAC,MAAA;AACA,OAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,QAAA;MACAC,OAAA;MACAC,MAAA;IACA;EACA;EACAC,UAAA;IACAP;EACA;EACAQ,OAAA;IACA;IACAC,aAAA;MACAR,OAAA,CAAAS,WAAA,CAAAC,gBAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAC,MAAA,GAAAD,GAAA,CAAAX,IAAA,CAAAA,IAAA;QACA,KAAAC,aAAA,GAAAW,MAAA,CAAAC,GAAA,CAAAC,QAAA;UACA,GAAAA,QAAA;UACAC,KAAA,EAAAD,QAAA,CAAAE;QACA;QACA,KAAAb,OAAA,QAAAF,aAAA;QACA,KAAAC,QAAA,QAAAD,aAAA;MACA;IACA;IACA;IACAgB,cAAAC,IAAA;MACAnB,OAAA,CAAAS,WAAA,CAAAW,mBAAA;QAAAD,IAAA,EAAAA;MAAA,GAAAR,IAAA,CAAAC,GAAA;QACA,KAAAR,OAAA,GAAAQ,GAAA,CAAAX,IAAA,CAAAA,IAAA;MACA;IACA;IACAoB,YAAA;MACA,SAAAhB,MAAA;QACA,KAAAa,aAAA,MAAAb,MAAA,CAAAiB,IAAA;MACA;QACA,KAAAlB,OAAA,QAAAF,aAAA;MACA;IACA;IACA;IACAqB,SAAA;MACA,SAAAlB,MAAA;QACA,KAAAa,aAAA,MAAAb,MAAA,CAAAiB,IAAA;MACA;QACA,KAAAd,YAAA;MACA;IACA;IACA;IACAgB,YAAAC,WAAA,EAAAC,EAAA;MACA,IAAAvB,QAAA,QAAAA,QAAA;MACA,IAAAwB,OAAA,GAAAF,WAAA,GAAAtB,QAAA,CAAAyB,MAAA,MAAAC,YAAA,CAAAJ,WAAA,KAAAtB,QAAA;MACA;MACA2B,OAAA,CAAAC,GAAA,CAAAJ,OAAA;MACAD,EAAA,CAAAC,OAAA;IACA;IACAE,aAAAJ,WAAA;MACA,OAAAtB,QAAA;QACA,OAAAA,QAAA,CAAAa,KAAA,CAAAgB,WAAA,GAAAC,OAAA,CAAAR,WAAA,CAAAO,WAAA;MACA;IACA;IACA;IACAE,aAAAC,IAAA;MACA,KAAAjB,aAAA,CAAAiB,IAAA,CAAAlB,aAAA;IACA;IACA;IACAmB,eAAAC,KAAA,EAAAC,EAAA;MACAtC,OAAA,CAAAS,WAAA,CAAA8B,kBAAA;QAAAD;MAAA,GAAA3B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAX,IAAA,CAAAuC,IAAA;UACA,KAAAjB,QAAA;QACA;MACA;IACA;EACA;EACAkB,QAAA;IACA;IACA,KAAAjC,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}